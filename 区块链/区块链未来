应用场景
	资产：数字资产发行、支付(跨境)、交易、结算
	记账：股权交易、供应链金融、商业积分
	不可篡改：溯源、众筹、医疗证明、存在性证明
	点对点：共享经济、物联网
	隐私：匿名交易


比特币
	比特币：数字货币、去中心化的记账系统

	优点：财产只受自己控制
		无通胀
		没有假钞
		流通性好(点对点)


比特币原理
	账本如何验证
		哈希函数：Hash(原始信息) = 摘要信息
		原理实现：【区块0 区块1 区块2 区块3 区块4】 => 只需要核验最后的摘要信息hash值(有细微的改变hash值都会改变)

	账户所有权问题: 密码地址 + 私钥
		点对点
		账户 -> 地址
			假设格式['付款地址' '收款地址' '金额']
		非对称加密技术(交易签名)
			交易进行hash得到摘要
			用私钥对摘要进行签名

		交易步骤	
		签名的过程
			1. 先对原始的交易记录进行hash计算 得到摘要的信息
				hash({'付款地址':"ewqi2j3j",'收款地址':"ds9fs2spx",'金额':"0.2btc"})  -> 结果摘要信息假设为 4Pdide8si
			2. 用摘要信息和私钥进行签名的运算 得到签名信息
				sign("4Pdide8si","9e0p3Gjsop3Gjs") -> 结果签名假设为"43cDf3m8o0pd"
				以上两步骤就得到了 摘要信息、私钥信息、签名信息

			在签名运算之后 付款的节点会进行一次广播交易(广播的过程是循环的过程)在网络中
			摘要 + 私钥	=	签名
			签名 + 付款方	=	摘要
			
	为什么记账？
		记账：Hash(16进制)打包过程   比特币发行的过程	(挖矿)
			工作量证明：
				Hash(上一个Hash值，交易记录集) = 839223BCD
				Hash(上一个Hash值，交易记录集，随机数) = 若干'0'开头 839223BCD   =》普通电脑获得4个0开头的需要一两分钟的时间
				因为挖矿人数过多 比特币是以18个0开头的

		消耗资源

		奖励

	共识机制
		多个机器共识于最长的链


	
总结:
	区块链的前世今生
		密码朋克

	区块链的前景
		资产、不可篡改、共享经济... ...

	比特币是什么
		去中心化的记账系统

	账本如何验证
		hash

	所有权问题
		非对称的加密 私钥是主要的 对比公钥

	为什么记账？


	以谁的账本为准？
		使用工作量最大的



	




	




	




	




	




	